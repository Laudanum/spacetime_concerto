<?php

    function spacetime_concerto_install() {
//        include_once DRUPAL_ROOT . '/profiles/standard/standard.install';
//        standard_install();

//        include_once DRUPAL_ROOT . '/profiles/commerce_kickstart/commerce_kickstart.install';
//        include_once DRUPAL_ROOT . '/profiles/commerce_kickstart/commerce_kickstart.profile';
//        commerce_kickstart_install();

//        variable_set('site_default_country', 'AU');

//	our own install
        include("spacetime.settings.inc");

//        _spacetime_concerto_configure_currency();
//        _spacetime_concerto_configure_payments();
//        _spacetime_concerto_create_products();

//  after creating the entry fee product we can load the saved form 
//  only if we're using commerce
//        module_enable(array("spacetime_entryform"));
        
    }
    
    
    function _spacetime_concerto_configure_currency() {
    //    default currency
        variable_set('commerce_default_currency', 'AUD');
    //    enabled currencies
        $currencies = array('AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'NZD', 'SGD', 'USD');
        variable_set('commerce_enabled_currencies', $currencies);
    }
    
    
    function _spacetime_concerto_configure_payments() {
//  add a payment method

//  add an action with our email address
        
        if ( module_exists("commerce_paypal_wps") ) {
            
//            $data = array();
/*
            db_insert('rules_config')
                ->fields(array(
                    'name' => 'commerce_payment_paypal_wps',
                    'label' => 'PayPal WPS',
                    'plugin' => 'reaction rule',
                    'active' => 1,
                    'status' => 3,
                    'module' => 'commerce_payment',
  //                  'data' => $data
                ))
            ->execute();
*/
        }
    }
    
    /*
function spacetime_concerto_default_rules_configuration() {
  $items = array();
  if ( module_exists("commerce_paypal_wps") && PP_ID ) {
      $items['rules_paypal_standard'] = entity_import('rules_config', '{ "rules_paypal_standard" : {
          "LABEL" : "Paypal Standard",
          "PLUGIN" : "reaction rule",
          "REQUIRES" : [ "commerce_payment" ],
          "ON" : [ "commerce_payment_methods" ],
          "DO" : [
            { "commerce_payment_enable_paypal_wps" : {
                "commerce_order" : [ "commerce_order" ],
                "payment_method" : { "value" : {
                    "method_id" : "paypal_wps",
                    "settings" : {
                      "business" : ' . PP_ID . ',
                      "currency_code" : "AUD",
                      "language" : "AU",
                      "server" : "sandbox",
                      "payment_action" : "sale",
                      "ipn_logging" : "notification"
                    }
                  }
                }
              }
            }
          ]
        }
      }');
  }
  return $items;
}
*/
    
    function _spacetime_concerto_create_products() {
        $fee_price = 1095;
        _spacetime_concerto_createProductType();
//                   _spacetime_concerto_createProduct($sku = 'entry-fee', $title = 'Fee', $amount = 1000, $currency_code = 'AUD', $uid = 1, $type_given = 'fee') {
        $entry_fee = _spacetime_concerto_createProduct('entry-fee', 'Fee', $fee_price, 'AUD', 1, 'fee');
    }
    
    
    function _spacetime_concerto_createProduct($sku = 'entry-fee', $title = 'Fee', $amount = 1000, $currency_code = 'AUD', $uid = 1, $type_given = 'fee') {
        if (module_exists('commerce_product')) {
          $new_product = commerce_product_new($type_given);
          $new_product->sku = $sku;
          $new_product->title = $title;
          $new_product->uid = $uid;

          $new_product->commerce_price[LANGUAGE_NONE][0]['amount'] = $amount;
          $new_product->commerce_price[LANGUAGE_NONE][0]['currency_code'] = $currency_code;
//          $new_product->commerce_price[LANGUAGE_NONE][0]['include_tax'] = "gst";
          $new_product->commerce_price[LANGUAGE_NONE][0]['data']['components'] = array();
          $new_product->commerce_price[LANGUAGE_NONE][0]['data']['include_tax'] = 'gst';

          commerce_product_save($new_product);

          return $new_product;
        }
        else {
          return FALSE;
        }
    }


//  to be used to create Fee product type
function _spacetime_concerto_createProductType($type = 'product_type', $name = 'Product Type', $description = '', $help = '', $append_random = TRUE) {
    if (module_exists('commerce_product')) {

      $new_product_type = commerce_product_ui_product_type_new();
      $new_product_type['type'] = "fee";
      $new_product_type['name'] = "Fee";
      $new_product_type['description'] = "Used when creating fees rather than classic products.";
      $new_product_type['help'] = $help;
      $new_product_type['is_new'] = TRUE;

      $save_result = commerce_product_ui_product_type_save($new_product_type);

      if ($save_result === FALSE) {
        return FALSE;
      }

      return $new_product_type;
    }
    else {
      return FALSE;
    }
  }
